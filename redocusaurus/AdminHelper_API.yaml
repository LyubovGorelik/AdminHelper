openapi: 3.0.0
info:
  title: Online Manicure Appointment API
  version: 1.0.0
  description: API для онлайн-записи на процедуры маникюра
servers:
  - url: http://api.yourdomain.com/v1
components:
  schemas:
    ClientInformation:
      type: object
      properties:
        fullName:
          type: string
          description: Полное имя клиента (ФИО)
          example: Иванова Анна Ивановна
        ClientId:
          type: string
          description: Номер телефона клиента
          example: '82345678990'
        email:
          type: string
          format: email
          description: Email клиента
          example: ivanov@example.com
      required:
        - fullName
        - clientid
        - email
    Service:
      type: object
      properties:
        name:
          type: string
          description: Название услуги
          example: 'Пакет: стандарт'
        price:
          type: number
          format: float
          description: Цена услуги
          example: 1500
        time:
          type: number
          description: Длительность услуги
          example: 10
        Servicedescription:
          type: string
          description: Краткое описание услуги
          example: >-
            Маникюр с покрытием гель-лак. Без дизайна. Ремонт не более 2х ногтей
            входит в стоимость
      required:
        - name
        - price
    ServiceList:
      type: array
      items:
        $ref: '#/components/schemas/Service'
    SumServices:
      type: object
      properties:
        totalPrice:
          type: number
          format: float
          description: Сумма цен всех выбранных услуг
          example: 3000
        totalTime:
          type: number
          format: float
          description: Длительность всей процедуры
          example: 90
        selectedServices:
          $ref: '#/components/schemas/Service'
    MasterShort:
      type: object
      properties:
        name:
          type: string
          description: Имя мастера
          example: Мария
        id:
          type: string
        experience:
          type: string
        photoUrl:
          type: string
          example: http://example.com/photo.jpg
    MasterLong:
      allOf:
        - $ref: '#/components/schemas/MasterShort'
        - type: object
          properties:
            services:
              type: array
              items:
                type: string
            portfolio:
              type: array
              items:
                type: string
                example: http://example.com/portfolio_preview.jpg
    MasterList:
      type: array
      items:
        $ref: '#/components/schemas/MasterShort'
    TimeSlot:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
          description: Время для начала работы
          example: '2023-10-15T14:30:00Z'
    TimeSlotsList:
      type: array
      items:
        $ref: '#/components/schemas/TimeSlot'
    ErrorCode:
      type: string
      enum:
        - NOT_FOUND
        - INVALID_INPUT
        - FORBIDDEN
        - SERVER_ERROR
    Error:
      type: object
      properties:
        message:
          type: string
          description: Описание ошибки
        code:
          $ref: '#/components/schemas/ErrorCode'
      required:
        - message
        - code
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    clientId:
      name: clientId
      in: path
      required: true
      description: Номер телефона клиента
      schema:
        type: string
    masterId:
      name: masterId
      in: path
      required: true
      description: MasterId
      schema:
        type: string
    selectedservices:
      name: selectedservices
      in: query
      required: true
      description: Список идентификаторов выбранных услуг, разделенных запятыми
      schema:
        type: array
        items:
          type: string
paths:
  /auth/register:
    post:
      tags:
        - Регистрация/Авторизация
      summary: Ввод номера телефона
      description: Пользователь вводит номер телефона и получает код для подтверждения.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phoneNumber:
                  type: string
                  example: '+1234567890'
      responses:
        '200':
          description: Код отправлен
        '400':
          description: Ошибка в запросе
        '500':
          description: Внутренняя ошибка сервера
        '503':
          description: Сервис временно недоступен
  /auth/verify:
    post:
      tags:
        - Регистрация/Авторизация
      summary: Подтверждение кода
      description: Пользователь вводит код, полученный по SMS.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phoneNumber:
                  type: string
                  example: '+1234567890'
                code:
                  type: string
                  example: '123456'
      responses:
        '200':
          description: Код подтвержден
        '400':
          description: Неверный код
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Сервис временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /clients/{clientId}:
    get:
      tags:
        - Информация о клиенте
      summary: Получить информацию о клиенте
      description: Возвращает данные о клиенте по номеру телефона после авторизации.
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/clientId'
      responses:
        '200':
          description: Информация о клиенте успешно получена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientInformation'
        '404':
          description: Клиент не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Сервис временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Информация о клиенте
      summary: Обновить информацию о клиенте
      description: Обновляет данные клиента (имя, email).
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientInformation'
      parameters:
        - $ref: '#/components/parameters/clientId'
      responses:
        '200':
          description: Информация о клиенте успешно обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientInformation'
        '400':
          description: Ошибка валидации данных
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Клиент не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Сервис временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /services:
    get:
      tags:
        - Выбор услуг и временного интервала
      summary: Получить список доступных услуг
      security:
        - BearerAuth: []
      description: Возвращает список всех доступных услуг в салоне.
      responses:
        '200':
          description: Список услуг успешно получен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceList'
        '404':
          description: Услуги не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Сервис временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /services/calculates:
    get:
      tags:
        - Выбор услуг и временного интервала
      summary: Рассчитать стоимость и длительность процедуры
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/selectedservices'
      responses:
        '200':
          description: >-
            Успешный ответ с суммой стоимости, длительностью и списком выбранных
            услуг
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SumServices'
        '400':
          description: Ошибка в запросе (неправильные параметры)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Сервис временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /masters:
    get:
      tags:
        - Выбор мастера
      summary: Получить список подходящих мастеров
      security:
        - BearerAuth: []
      description: Возвращает список мастеров по введенным услугам и временному интервалу
      parameters:
        - $ref: '#/components/parameters/selectedservices'
        - name: date
          in: query
          required: true
          description: >-
            Дата, для которой нужно получить доступные временные окошки (в
            формате YYYY-MM-DD)
          schema:
            type: string
            example: '2023-10-15'
        - name: startTime
          in: query
          required: true
          description: Самое раннее время начала услуги в формате ЧЧ:ММ
          schema:
            type: string
            example: '14:30'
        - name: endTime
          in: query
          required: true
          description: Самое позднее время начала услуги в формате ЧЧ:ММ
          schema:
            type: string
            example: '15:30'
      responses:
        '200':
          description: Список мастеров успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  masters:
                    $ref: '#/components/schemas/MasterList'
                  total:
                    type: integer
                    description: Общее количество мастеров
                    example: 50
        '404':
          description: Мастера не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Сервис временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /masters/{masterId}:
    get:
      tags:
        - Выбор мастера
      summary: Получить данные о конкретном мастере
      security:
        - BearerAuth: []
      description: >-
        Возвращает подробную информацию о мастере по его уникальному
        идентификатору.
      parameters:
        - $ref: '#/components/parameters/masterId'
      responses:
        '200':
          description: Данные о мастере успешно получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterLong'
        '404':
          description: Мастер не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Сервис временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /masters/{masterId}/available-time:
    get:
      tags:
        - Выбор мастера
      summary: Получить доступное время у мастера
      security:
        - BearerAuth: []
      description: >-
        Возвращает список доступных временных окошек для записи на услуги у
        конкретного мастера.
      parameters:
        - $ref: '#/components/parameters/masterId'
        - $ref: '#/components/parameters/selectedservices'
        - name: date
          in: query
          required: true
          description: >-
            Дата, для которой нужно получить доступные временные окошки (в
            формате YYYY-MM-DD)
          schema:
            type: string
            example: '2023-10-15'
        - name: startTime
          in: query
          required: true
          description: Самое раннее время начала услуги в формате ЧЧ:ММ
          schema:
            type: string
            example: '14:30'
        - name: endTime
          in: query
          required: true
          description: Самое позднее время начала услуги в формате ЧЧ:ММ
          schema:
            type: string
            example: '15:30'
      responses:
        '200':
          description: Доступные временные окошки успешно получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSlotsList'
        '404':
          description: Мастер не найден или нет доступных временных окошек
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Сервис временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /clients/bookings:
    post:
      tags:
        - Подтверждение заявки
      summary: Создать заявку на услуги
      description: Создает новую заявку на услуги для клиента с указанным номером телефона.
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/clientId'
      requestBody:
        description: Данные заявки на услуги
        content:
          application/json:
            schema:
              type: object
              properties:
                ClientInfo:
                  $ref: '#/components/schemas/ClientInformation'
                Selectedservices:
                  $ref: '#/components/parameters/selectedservices'
                selectedServices_total_time_cost:
                  $ref: '#/components/schemas/SumServices'
                Selected_Master:
                  $ref: '#/components/parameters/masterId'
                selectedTimeSlot:
                  $ref: '#/components/schemas/TimeSlot'
      responses:
        '201':
          description: Заявка создана успешно
        '400':
          description: Неверные данные заявки
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Окошко для записи недоступно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Сервис временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
